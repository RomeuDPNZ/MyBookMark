/*
 *
 * Criado em: 10/07/2021
 *
 * CREATE DATABASE mybookmark;
 *
 * source /home/hb/eclipse-workspace-java/MyBookMark/src/main/webapp/WEB-INF/mybookmark.sql
 *
 */

USE mybookmark;

CREATE TABLE IF NOT EXISTS Divs (
    id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
    position ENUM ('LEFT', 'CENTER', 'RIGHT', 'BOTTOM') NOT NULL,
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id, name)
);

CREATE TABLE IF NOT EXISTS Categories (
    id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
	divs BIGINT UNSIGNED NOT NULL REFERENCES Divs(id),
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Links (
	id SERIAL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(255) NOT NULL DEFAULT '',
    link TEXT NOT NULL,
    category BIGINT UNSIGNED NOT NULL REFERENCES categories(id),
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Chronometer (
	id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
    dateOf TIMESTAMP NOT NULL,
    category BIGINT UNSIGNED NOT NULL REFERENCES categories(id),
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Countdown (
	id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
    dateOf TIMESTAMP NOT NULL,
    category BIGINT UNSIGNED NOT NULL REFERENCES categories(id),
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS MonthlyReminder (
	id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
    day BIGINT UNSIGNED NOT NULL,
    category BIGINT UNSIGNED NOT NULL REFERENCES categories(id),
    daysBefore BIGINT UNSIGNED NOT NULL,
    daysAfter BIGINT UNSIGNED NOT NULL,
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS AnnualReminder (
    id SERIAL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL DEFAULT '',
    day BIGINT UNSIGNED NOT NULL,
    month BIGINT UNSIGNED NOT NULL,
    category BIGINT UNSIGNED NOT NULL REFERENCES categories(id),
    daysBefore BIGINT UNSIGNED NOT NULL,
    daysAfter BIGINT UNSIGNED NOT NULL,
	lastUpdatedOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	createdOn TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Settings (
  id SERIAL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL DEFAULT '',
  theme ENUM ('LIGHT', 'DARK') NOT NULL,
  lastUpdatedOn TIMESTAMP DEFAULT (CURRENT_TIMESTAMP) ON UPDATE CURRENT_TIMESTAMP,
  createdOn TIMESTAMP DEFAULT (CURRENT_TIMESTAMP),
  PRIMARY KEY (id)
);

INSERT INTO Divs (name, position) VALUES ('Div LEFT', 'LEFT');
INSERT INTO Divs (name, position) VALUES ('Div CENTER', 'CENTER');
INSERT INTO Divs (name, position) VALUES ('Div RIGHT', 'RIGHT');

